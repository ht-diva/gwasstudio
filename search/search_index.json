{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to GWASStudio documentation","text":"<p>GWASStudio is a powerful CLI tool designed for efficient storage, retrieval, and querying of genomic summary statistics. It offers a high-performance infrastructure for handling and analyzing large-scale GWAS and QTL datasets, enabling seamless cross-dataset exploration.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>export</code> - Export summary statistics from the DB with various filtering options.</li> <li><code>info</code> - Show GWASStudio details</li> <li><code>ingest</code> - Ingest datasets into the DB.</li> <li><code>list</code> - List every category \u2192 project \u2192 study hierarchy stored in the metadata DB.</li> <li><code>meta-query</code> - Query the DB for specific records.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Set up the GWASStudio CLI on your system.</p>"},{"location":"#configuration","title":"Configuration","text":"<p>Configure access to the diverse components used by GWASStudio.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>This short overview of GWASStudio will help you get started.</p>"},{"location":"commands/","title":"Commands usage","text":""},{"location":"commands/#commands","title":"Commands","text":""},{"location":"commands/#export","title":"<code>export</code>","text":"<p>Export summary statistics from TileDB datasets with various filtering options.</p> <p>Usage:</p> <pre><code>gwasstudio export [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>--uri TEXT</code>: URI of the TileDB dataset.</li> <li><code>--output-prefix TEXT</code>: Prefix for naming output files (default: <code>out</code>).</li> <li><code>--output-format [parquet|csv.gz|csv]</code>: Output file format (default: <code>csv.gz</code>).</li> <li><code>--search-file TEXT</code>: Input file for querying metadata (required).</li> <li><code>--attr TEXT</code>: String delimited by comma with the attributes to export (default: <code>BETA,SE,EAF,MLOG10P</code>).</li> </ul> <p>Locusbreaker Options:</p> <ul> <li><code>--locusbreaker</code>: Option to run locusbreaker (flag).</li> <li><code>--pvalue-sig FLOAT</code>: Maximum log p-value threshold within the window (default: <code>5.0</code>).</li> <li><code>--pvalue-limit FLOAT</code>: Log p-value threshold for loci borders (default: <code>3.3</code>).</li> <li><code>--hole-size INTEGER</code>: Minimum pair-base distance between SNPs in different loci (default: <code>250000</code>).</li> </ul> <p>SNP ID List Filtering Options:</p> <ul> <li><code>--snp-list-file TEXT</code>: A txt file which must include CHR and POS columns.</li> </ul> <p>Plotting Options:</p> <ul> <li><code>--plot-out</code>: Boolean to plot results. If enabled, the output will be plotted as a Manhattan plot (flag).</li> <li><code>--color-thr TEXT</code>: Color for the points passing the threshold line in the plot (default: <code>red</code>).</li> <li><code>--s-value INTEGER</code>: Value for the suggestive p-value line in the plot (default: <code>5</code>).</li> </ul> <p>Regions Filtering Options:</p> <ul> <li><code>--get-regions TEXT</code>: Bed file with regions to filter.</li> <li><code>--maf FLOAT</code>: MAF filter to apply to each region (default: <code>0.01</code>).</li> <li><code>--phenovar</code>: Boolean to compute phenovariance (Work in progress, not fully implemented yet) (flag).</li> <li><code>--nest</code>: Estimate effective population size (Work in progress, not fully implemented yet) (flag).</li> </ul>"},{"location":"commands/#info","title":"<code>info</code>","text":"<p>Show GWASStudio details</p> <p>Usage:</p> <pre><code>gwasstudio info\n</code></pre>"},{"location":"commands/#ingest","title":"<code>ingest</code>","text":"<p>Ingest data in TileDB datasets.</p> <p>Usage:</p> <pre><code>gwasstudio ingest [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>--file-path TEXT</code>: Path to the tabular file containing details for the ingestion (required).</li> <li><code>--delimiter TEXT</code>: Character or regex pattern to treat as the delimiter (default: <code>\\t</code>).</li> <li><code>--uri TEXT</code>: Destination path where to store the tiledb dataset. The prefix can be <code>s3://</code> or <code>file://</code> (required).</li> <li><code>--ingestion-type [metadata|data|both]</code>: Choose between metadata ingestion, data ingestion, or both (default: <code>both</code>).</li> <li><code>--pvalue</code>: Indicate whether to ingest the p-value from the summary statistics instead of calculating it (default: <code>True</code>).</li> </ul>"},{"location":"commands/#list","title":"<code>list</code>","text":"<p>List every category \u2192 project \u2192 study hierarchy stored in the metadata DB</p> <p>Usage:</p> <pre><code>gwasstudio list\n</code></pre>"},{"location":"commands/#meta-query","title":"<code>meta-query</code>","text":"<p>Query metadata records from MongoDB</p> <p>Usage:</p> <pre><code>gwasstudio meta-query [OPTIONS]\n</code></pre> <p>Options:</p> <ul> <li><code>--search-file</code>: The search file used for querying metadata  [required]</li> <li><code>--output-prefix</code>: Prefix to be used for naming the output files</li> <li><code>--case-sensitive</code>: Enable case sensitive search</li> </ul>"},{"location":"configuration/","title":"GWASStudio: Configuration","text":"<p>How to configure access to the diverse components used by GWASStudio.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This short overview of GWASStudio will help you get started.</p>"},{"location":"getting-started/#usage-on-the-ht-hpc","title":"Usage on the HT-HPC","text":"<p>To use GWASStudio on the HT computing cluster, simply type:</p> <pre><code>source /exchange/healthds/singularity_functions\n</code></pre> <p>Verify with:</p> <pre><code>gwasstudio --version\n</code></pre>"},{"location":"getting-started/#vault-token","title":"Vault token","text":"<p>To securely access (meta)data according to your user permissions, you will be provided with a vault token.</p> <p>To authenticate automatically, please save your token in the following file:</p> <pre><code>${HOME}/.vault-token\n</code></pre> <p>NOTE:</p> <ul> <li>The vault token is personal and confidential. Do not share it with other users</li> <li>If <code>${HOME}/.vault-token</code> is missing, you will be prompted to manually paste the token during commmand execution</li> </ul>"},{"location":"getting-started/#main-commands","title":"Main commands","text":"<p>GWASStudio has three main commands for users:</p> <ul> <li>list: list available/accessible data</li> <li>meta-query: query metadata of interest</li> <li>export: export data of interest</li> </ul>"},{"location":"getting-started/#1-list","title":"1. <code>list</code>","text":"<p>The <code>list</code> command is used to display all summary statistics available on MongoDB, based on your access permissions (see vault token) as category \u2192 project \u2192 study.</p>"},{"location":"getting-started/#list-example","title":"List example","text":"<pre><code>gwasstudio list\n</code></pre>"},{"location":"getting-started/#list-output-example","title":"List output example","text":"<pre><code>Category: GWAS\n  Project: opengwas\n        Studies: ukb-a, ukb-b, ukb-d\n</code></pre>"},{"location":"getting-started/#2-meta-query","title":"2. <code>meta-query</code>","text":"<p>The <code>meta-query</code> command retrieves metadata of interest using a query file. It can be used to verify the availability and characteristics of the data to export.</p>"},{"location":"getting-started/#meta-query-example","title":"Meta-query example","text":"<pre><code>gwasstudio meta-query --search-file query_ex01.txt --output-prefix output_query_ex01\n</code></pre> <p>The output is a metadata table named output_query_ex01.csv with records filtered by the query file query_ex01.txt.</p> <p>For a detailed explanation of all command options, see also meta-query command.</p>"},{"location":"getting-started/#metadata","title":"Metadata","text":"<p>A metadata table is assigned to each project-study and describes key information about the available/accessible summary statistics. Metadata records may contain the following fields:</p> Metadata field Description Possible values <code>category</code> The type of summary statistics GWAS, pQTL, eQTL <code>project</code> Project to which the data belongs opengwas, pqtl, genesandhealth, ... <code>study</code> The study under which the summary statistics fall ukb-a, ukb-b,  ukb-d, ... <code>data_id</code> Unique ID for a summary statistics record e.g. 89f31189b3 <code>build</code> Genome build GRCh37, GRCh38 <code>population</code> Ancestry of the cohort see the ancestry categories page <code>total.samples</code> Total sample size nr. <code>total.cases</code> Total amount of cases nr. <code>total.controls</code> Total amount of controls nr. <code>trait.desc</code> A description of the trait (e.g. phenotypes or protein) associated to the summary statistics record e.g. \"Pregnancy, childbirth and the puerperium\", \"Alpha-1B-glycoprotein\" ... <code>notes.sex</code> The sex of the individuals that participated to the study Males and Females, Combined <p>For a more detailed description of the metadata fields, please refer to the metadata records page.</p>"},{"location":"getting-started/#query-file","title":"Query file","text":"<p>The query file used to retrieve (meta)data follows a structured format with two sections:</p> <ul> <li>Filtering criteria: metadata fields used to query the database, specified as <code>metadata field: filtering value</code> pairs</li> <li>Output specification (<code>output:</code>): a list of valid metadata fields to include in the output</li> </ul>"},{"location":"getting-started/#query-file-example","title":"Query file example","text":"<pre><code>project: opengwas\nstudy: ukb-d\ncategory: GWAS\n\ntrait:\n  - desc: Z42\n  - desc: pregnancy\n\noutput:\n  - build\n  - population\n  - notes.sex\n  - notes.source_id\n  - total.samples\n  - total.cases\n  - total.controls\n  - trait.desc\n</code></pre> <p>This query file searches within the <code>ukb-d</code> study for all trait descriptions containing <code>Z42</code> or <code>pregnancy</code>, and returns a table with the columns specified in section <code>output:</code>.</p> <p>NOTES:</p> <ul> <li>Filtering values can include partial matches  (e.g. trait descriptions containing <code>Z42</code> or <code>pregnancy</code>)</li> <li>Filtering values are processed by lowercasing and replacing special characters before being used to query the database</li> <li>It is possible to query across different projects and studies by not specifiyng <code>project</code> and <code>study</code> in the query file</li> </ul>"},{"location":"getting-started/#meta-query-output-example","title":"Meta-query output example","text":"project study category data_id build population notes_sex notes_source_id total_samples total_cases total_controls trait_desc opengwas ukb-d GWAS 47e96deafe GRCh38 European Males and Females ukb-d-XV_PREGNANCY_BIRTH 361194 11959 349235 \"Pregnancy,  childbirth and the puerperium\" opengwas ukb-d GWAS 531f0d4bcc GRCh38 European Males and Females ukb-d-Z42 361194 1963 359231 Diagnoses - main ICD10: Z42 Follow-up care involving plastic surgery opengwas ukb-d GWAS cc18ce8683 GRCh38 European Males and Females ukb-d-O26 361194 1289 359905 Diagnoses - main ICD10: O26 Maternal care for other conditions predominantly related to pregnancy"},{"location":"getting-started/#3-export","title":"3. <code>export</code>","text":"<p>The <code>export</code> command is used to extract records of summary statistics (and associated metadata) from TileDB as speficied in the query file.</p>"},{"location":"getting-started/#enter-compute-node","title":"Enter compute node","text":"<p>The <code>export</code> command is a computationally intensive operation. Therefore, it must be executed from a compute node.</p> <p>To enter a compute node, run the following command:</p> <pre><code>salloc --partition=cpu-interactive --nodes=1 --ntasks-per-node=2 --mem-per-cpu=2048M --time=12:00:00\n</code></pre>"},{"location":"getting-started/#full-stats","title":"Full stats","text":"<p>The <code>export</code> command, when used without any filtering options, will export the full set of summary statistics.</p> <pre><code>gwasstudio export --search-file query_ex01.txt\n</code></pre>"},{"location":"getting-started/#filtering-options","title":"Filtering options","text":"<p>Exports can also be performed with different filtering options.</p>"},{"location":"getting-started/#region-filtering","title":"Region filtering","text":"<p>Command example to export data by filtering regions provided in <code>regions_query.tsv</code>:</p> <pre><code>gwasstudio export --search-file query_ex01.txt --get-regions regions_query.tsv\n</code></pre>"},{"location":"getting-started/#snp-filtering","title":"SNP filtering","text":"<p>Command example to export data by filtering SNPIDs listed in <code>hapmap3_snps.csv</code>:</p> <pre><code>gwasstudio export --search-file query_ex01.txt --snp-list-file hapmap3_snps.csv\n</code></pre>"},{"location":"getting-started/#locusbreaker","title":"Locusbreaker","text":"<p>Command example to export data with locusbreaker:</p> <pre><code>gwasstudio export --search-file query_ex01.txt --locusbreaker\n</code></pre> <p>For a detailed explanation of all command options, see also export command.</p>"},{"location":"installation/","title":"GWASStudio: Installation Guide","text":"<p>This guide will walk you through the installation process.</p>"},{"location":"installation/#installation-from-source","title":"Installation from source","text":"<p>You can install GWASStudio using either the <code>make</code> command (recommended for simplicity) or manually. Choose the method that best fits your workflow.</p>"},{"location":"installation/#1-installation-using-make-recommended","title":"1. Installation Using <code>make</code> (Recommended)","text":"<p>The <code>make</code> method automates most of the installation steps, making it easier and less error-prone.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Ensure you have <code>make</code> installed on your system.</li> <li>Ensure you have <code>conda</code> or <code>miniconda</code> installed for environment management.</li> </ul>"},{"location":"installation/#steps","title":"Steps","text":"<p>1. Clone the Repository</p> <p>Clone the repository to your local machine:</p> <pre><code>git clone https://github.com/ht-diva/gwasstudio.git\ncd gwasstudio\n</code></pre> <p>2. Create the Conda Environment</p> <p>Run the following command to create a dedicated conda environment for GWASStudio:</p> <pre><code>make create-env\n</code></pre> <p>This command reads the environment configuration from <code>base_environment.yml</code> and sets up a clean, isolated environment.</p> <p>3. Install Dependencies</p> <p>Install all required dependencies using:</p> <pre><code>make dependencies\n</code></pre> <p>This step ensures that all necessary Python packages and system libraries are installed.</p> <p>4. Install the Program</p> <p>Finally, install the program in your conda environment:</p> <pre><code>make install\n</code></pre> <p>This installs the program globally within your conda environment, making it available from the command line.</p>"},{"location":"installation/#2-manual-installation-without-make","title":"2. Manual Installation (Without <code>make</code>)","text":"<p>If you prefer not to use <code>make</code>, you can install GWASStudio manually. This method gives you more control over each step.</p>"},{"location":"installation/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Ensure you have <code>conda</code> or <code>miniconda</code> installed.</li> </ul>"},{"location":"installation/#steps_1","title":"Steps","text":"<p>1. Clone the Repository</p> <p>Clone the repository to your local machine:</p> <pre><code>git clone https://github.com/ht-diva/gwasstudio.git\ncd gwasstudio\n</code></pre> <p>1. Create the Conda Environment</p> <p>Create a new conda environment using the provided configuration file:</p> <pre><code>conda env create --file base_environment.yml\n</code></pre> <p>This command sets up a conda environment with all the base dependencies specified in <code>base_environment.yml</code>.</p> <p>2. Activate the Conda Environment</p> <p>Activate the environment with the following commands:</p> <pre><code>  conda activate gwasstudio\n</code></pre> <p>4. Install the program</p> <p>Use <code>poetry</code> to install the project dependencies (excluding development dependencies) and the program:</p> <pre><code>  poetry install --without dev\n</code></pre> <p>This installs gwasstudio in your active conda environment.</p>"},{"location":"metadata/","title":"Metadata records","text":"<p>Each project-study combination is associated with a metadata record that describes the key characteristics of the available summary-statistics file(s). These records are used throughout the platform (e.g., for filtering, querying, and API responses) and therefore follow a stable schema. When new attributes become relevant they should be added to this table and, if possible, given a concise, human-readable label.</p>"},{"location":"metadata/#core-metadata-fields","title":"Core metadata fields","text":"Field (canonical name) Friendly label Description Possible values / format <code>category</code> Summary-statistic type Type of summary statistics <code>GWAS</code>, <code>pQTL</code>, <code>eQTL</code>, \u2026 <code>project</code> Project Identifier of the project the data belongs to <code>opengwas</code>, <code>pqtl</code>, <code>genesandhealth</code>, \u2026 <code>study</code> Study Identifier of the specific study <code>ukb-a</code>, <code>ukb-b</code>, <code>ukb-d</code>, \u2026 <code>data_id</code> Record ID Unique identifier for the metadata entry e.g. <code>89f31189b3</code> <code>build</code> Genome build Reference genome build <code>GRCh37</code>, <code>GRCh38</code> <code>population</code> Broad ancestry category Ancestry of the cohort see the ancestry categories page <code>total_samples</code> Number of samples Sample size of the cohort integer <code>total_cases</code> Number of cases Count of case subjects (if applicable) integer <code>total_controls</code> Number of controls Count of control subjects (if applicable) integer <code>trait_desc</code> Trait description Human-readable description of the phenotype or protein e.g. \u201cPregnancy, childbirth and the puerperium\u201d, \u201cAlpha-1B-glycoprotein\u201d <code>notes_sex</code> Sex of participants Sex composition of the cohort <code>Males</code>, <code>Females</code>, <code>Combined</code>"},{"location":"metadata/#additional-optional-fields-may-appear-in-specific-projects","title":"Additional optional fields (may appear in specific projects)","text":"Field Friendly label When to use <code>notes_maker</code> Data producer Institution or consortium that generated the data <code>notes_maker_platform_technology</code> Assay technology Technology used to generate the data (e.g., array, sequencing) <code>notes_maker_platform_description</code> Assay description Provide extra detail beyond the technology name <code>notes_maker_platform_version</code> Assay version Useful when multiple releases exist <code>notes_maker_platform_normalization</code> Normalization strategy Clarifies how raw data were transformed <code>notes_software_description</code> Analysis software Record the tool that generated the statistics <code>notes_source_id</code> Source ID Original identifier of the upstream summary\u2011statistics file <code>trait_gene_ids</code> Gene identifiers When multiple genes are linked to the trait <code>trait_icd10</code> Clinical code When the trait is a disease phenotype <code>trait_protein_ids</code> Protein identifiers For proteomics\u2011related summary statistics <code>trait_seqid</code> Sequence identifier SomaLogic specific sequence identifier for the trait <code>trait_tissue</code> Measured tissue eQTL/pQTL studies that are tissue\u2011specific <code>trait_unit</code> Measurement unit For quantitative traits (e.g., blood pressure)"},{"location":"population/","title":"Ancestry categories","text":"<p>The GWAS\u2011Studio platform uses a standardised list of ancestry (population) categories. Each category has a short, machine\u2011friendly code (the shortcut) that can be stored in the database or used in API calls, while the full description is shown to users.</p>"},{"location":"population/#ancestry-shortcut-table","title":"Ancestry shortcut table","text":"Shortcut Full description AUS Aboriginal Australian AFA African American or Afro\u2011Caribbean AFR African unspecified ASN Asian unspecified CAS Central Asian EAS East Asian EUR European MDE Greater Middle Eastern (Middle Eastern, North African, or Persian) AMR Hispanic or Latin American ISL Icelandic NR Not reported / unknown NAM Native American OCE Oceanian OTH Other ADM Other admixed ancestry SAS South Asian SEA South East Asian SAF Sub\u2011Saharan African"},{"location":"population/#how-to-use-the-table","title":"How to use the table","text":"<ul> <li>Database / API \u2013 store the shortcut (e.g., <code>EUR</code>) and map it to the full description when presenting data to users.</li> <li>User interfaces \u2013 show the full description in dropdowns or tooltips; the shortcut can be used for filtering or as a compact label.</li> <li>Validation \u2013 accept either the shortcut or the full description, then normalise to the shortcut for internal consistency.</li> </ul> <p>The list is version\u2011controlled; any addition or change should be reflected both in <code>src/gwasstudio/config/config.yaml</code> (under <code>ancestry_groups</code>) and in this documentation.</p> <p>Source: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5815218/table/Tab1/?report=objectonly</p>"}]}